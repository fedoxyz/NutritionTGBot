from handlers.receipt_overview_handler import products_list_pag_callback
from logger import logger
import re
from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters, CallbackQueryHandler
from typing import Dict, Callable, Awaitable
from utils.message_utils import send_message
from utils.chat_filters import private_chat_only
from keyboards.data_source_kb import receipts_paginator, data_source_kb, products_paginator
from keyboards.paginator_kb import handle_pagination, handle_list_display


OptionHandler = Callable[[Update, ContextTypes.DEFAULT_TYPE], Awaitable[None]]

async def receipts_list_pag_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await handle_pagination(update, context, receipts_paginator, "–°–ø–∏—Å–æ–∫ —á–µ–∫–æ–≤:")

#async def products_list_pag_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#    context.user_data['current_receipt'] = {
#            'products': data["products"],
#            'receipt_date': data["receipt_date"],
#            'current_page': 1,
#            'editing_mode': False,
#            'selected_product': None
#        }
#    await handle_pagination(update, context, products_paginator, "–°–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:")

async def data_source(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: "
    await send_message(update, context, text, reply_markup=data_source_kb()) 

async def how_to_receipts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = """1Ô∏è‚É£ *–ó–∞–≥—Ä—É–∑–∏ —á–µ–∫* –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ JSON-—Ñ–æ—Ä–º–∞—Ç–µ:  
       - üì± *–°–∫–∞—á–∞–π –∏ –æ—Ç–∫—Ä–æ–π* –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ *¬´–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ–∫–æ–≤ –§–ù–°¬ª* ‚Äì [Google Play](https://play.google.com/store/apps/details?id=ru.fns.billchecker), [App Store](https://apps.apple.com/ru/app/%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D1%87%D0%B5%D0%BA%D0%BE%D0%B2-%D1%84%D0%BD%D1%81-%D1%80%D0%BE%D1%81%D1%81%D0%B8%D0%B8/id1169353005) –∏–ª–∏ [RuStore](https://www.rustore.ru/catalog/app/ru.fns.billchecker.mobile.android)  
       - üîë *–ü—Ä–æ–π–¥–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é* (–º–æ–∂–Ω–æ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞)  
       - üì∑ *–°–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥* —á–µ–∫–∞ (–≤–∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞)  
       - üì§ *–ü–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è* –Ω–∞ —ç–∫—Ä–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö. –ù–∞–∂–º–∏:  
         ¬´–î–µ–π—Å—Ç–≤–∏—è —Å —á–µ–∫–æ–º¬ª ‚Üí ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª ‚Üí ¬´JSON¬ª ‚Üí ¬´Telegram¬ª ‚Üí –≤—ã–±–µ—Ä–∏ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.

    2Ô∏è‚É£ *–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:*  
       - ‚úçÔ∏è *–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º*, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´—Ö–ª–µ–± —Ä–∂–∞–Ω–æ–π 550 –≥, —Å–º–µ—Ç–∞–Ω–∞ 20% 200 –≥¬ª  
       - üì∏ *–°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é* —á–µ–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–µ –±–æ—Ç—É  
       - üé§ *–ó–∞–ø–∏—à–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ* —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –µ–≥–æ –≤–µ—Å–æ–º (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)

    3Ô∏è‚É£ *–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤* –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–∫–æ–º–∞–Ω–¥–∞ /start).
    """
    await send_message(update, context, text=text, reply_markup=data_source_kb(), parse_mode="Markdown", disable_web_page_preview=True)

async def receipts_list(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await handle_list_display(update, context, receipts_paginator, "–°–ø–∏—Å–æ–∫ —á–µ–∫–æ–≤:")

async def unrecognized_p_list(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤"
    await send_message(update, context, text, reply_markup=data_source_kb())

menu_options: Dict[str, OptionHandler] = {
    "–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö": data_source,
    "–ö–∞–∫ –¥–æ–±–∞–≤–ª—è—Ç—å —á–µ–∫–∏": how_to_receipts,
    "–°–ø–∏—Å–æ–∫ —á–µ–∫–æ–≤": receipts_list,
    "–°–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤": products_list_pag_callback,
    "–°–ø–∏—Å–æ–∫ –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤": unrecognized_p_list,
}

@private_chat_only
async def handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.message or not update.message.text:
        logger.warning("–ü–æ–ª—É—á–µ–Ω update –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –≤ handler")
        return

    option = update.message.text
    handler = menu_options.get(option)
    
    if handler:
        await handler(update, context)
    else:
        await update.message.reply_text(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: {option}")

def setup_data_source_handlers(application):
    filter = filters.Regex('^(' + '|'.join(map(re.escape, menu_options.keys())) + ')$')
    application.add_handler(MessageHandler(filter & ~filters.COMMAND, handler))
    application.add_handler(CallbackQueryHandler(receipts_list_pag_callback, pattern=r"^receipts_page#\d+$"))
    #application.add_handler(CallbackQueryHandler(products_list_pag_callback, pattern=r"^products_page#\d+$"))

    logger.debug("–î–æ–±–∞–≤–ª–µ–Ω—ã menu handlers")


